//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.

//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Bolt.Client;
using Bolt.Client.Channels;
using Contract;
using Contract.Parameters;


namespace Contract
{
    internal partial class MemoServiceProxy : ContractProxy<Contract.MemoServiceDescriptor>, Contract.IMemoService
    {
        public MemoServiceProxy(Contract.MemoServiceProxy proxy) : base(proxy)
        {
        }

        public MemoServiceProxy(IChannel channel) : base(channel)
        {
        }

        public virtual void Login(string userName)
        {
            var bolt_Params = new Contract.Parameters.LoginParameters();
            bolt_Params.UserName = userName;
            Channel.Send(bolt_Params, Descriptor.Login, GetCancellationToken(Descriptor.Login));
        }

        public virtual void AddMemo(string memo)
        {
            var bolt_Params = new Contract.Parameters.AddMemoParameters();
            bolt_Params.Memo = memo;
            Channel.Send(bolt_Params, Descriptor.AddMemo, GetCancellationToken(Descriptor.AddMemo));
        }

        public virtual void RemoveMemo(string memo)
        {
            var bolt_Params = new Contract.Parameters.RemoveMemoParameters();
            bolt_Params.Memo = memo;
            Channel.Send(bolt_Params, Descriptor.RemoveMemo, GetCancellationToken(Descriptor.RemoveMemo));
        }

        public virtual List<string> GetAllMemos()
        {
            return Channel.Send<List<string>, Bolt.Empty>(Bolt.Empty.Instance, Descriptor.GetAllMemos, GetCancellationToken(Descriptor.GetAllMemos));
        }

        public virtual void Logoff()
        {
            Channel.Send(Bolt.Empty.Instance, Descriptor.Logoff, GetCancellationToken(Descriptor.Logoff));
        }
    }
}